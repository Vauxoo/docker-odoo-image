#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function

import os
import pwd
import subprocess
import time
import glob


def docker_cache():
    # We can't delete a database in entrypoint because
    #     runbot could be errors to start a instance alive.
    # print("Drop database openerp_test to reuse template db")
    # cmd = ['dropdb', 'openerp_test']
    # subprocess.call(cmd)

    print("Update main repo")
    git_cmd = ['git', '--git-dir=' + os.path.join(
        os.environ.get('TRAVIS_BUILD_DIR', '.'), '.git'),
    ]
    cmd = git_cmd + [
        'fetch', 'origin',
        '+refs/pull/%d/merge:' % int(os.environ.get('TRAVIS_PULL_REQUEST', 0))]
    subprocess.call(cmd)
    cmd = git_cmd + ['checkout', '-qf', os.environ.get('TRAVIS_COMMIT')]
    subprocess.call(cmd)

    # TODO: Update odoo/odoo

    print("Running oca_dependencies.")
    cmd = [os.path.expanduser(
        '~/maintainer-quality-tools/travis/clone_oca_dependencies')]
    subprocess.call(cmd)

    cmd = ['rm', '-rf', os.path.expanduser('~/.openerp_server.stats')]
    subprocess.call(cmd)

    cmd = ['coverage', 'erase']
    subprocess.call(cmd)
    return True


def docker_entrypoint():
    # Fix postgresql
    #  https://github.com/docker/docker/issues/783
    #   issuecomment-56013588
    if pwd.getpwuid(os.getuid())[0] == 'root':
        cmds = [
            ["mkdir", "-p", "/etc/ssl/private-copy"],
            ["mkdir", "-p", "/etc/ssl/private"],
            ["mv", "/etc/ssl/private/*", "/etc/ssl/private-copy/"],
            ["rm", "-r", "/etc/ssl/private"],
            ["mv", "/etc/ssl/private-copy", "/etc/ssl/private"],
            ["chmod", "-R", "0700", "/etc/ssl/private"],
            ["chown", "-R", "postgres", "/etc/ssl/private"],
        ]
        for cmd in cmds:
            subprocess.call(' '.join(cmd), shell=True)

        # Patch to force start odoo as root
        if glob.glob(os.getenv("HOME") + '/*/*/cli/server.py'):
            cmd = """sed -i "s/== 'root'/== 'force_root'/g" %s/*/*/cli/server.py""" % os.getenv("HOME")  # noqa
            subprocess.call(cmd, shell=True)

    # Start ssh service
    if os.environ.get('START_SSH', False) and pwd.getpwuid(os.getuid())[0] == 'root':
        cmd = "/etc/init.d/ssh start"
        subprocess.call(cmd, shell=True)

    # Start postgresql service
    cmd = '/etc/init.d/postgresql start ' + os.environ.get('PSQL_VERSION', '')
    subprocess.call(cmd, shell=True, env=os.environ)
    print("Waiting to start psql service...")
    count = 0
    max_count = 240
    while True:
        psql_subprocess = subprocess.Popen(
            ["psql", '-l'], stdout=subprocess.PIPE,
            stderr=subprocess.PIPE)
        psql_subprocess.wait()
        psql_out = psql_subprocess.stderr.read()
        if b'rol' in psql_out and b'does not exist' in psql_out:
            psql_error = False
        elif psql_out:
            psql_error = True
        else:
            psql_error = False
        if not psql_error or count > max_count:
            break
        time.sleep(3)
        count += 1
    if not psql_error:
        print("...psql service started.")
    else:
        raise RuntimeError("PSQL not started.")

    # Fix flaky error when run instance to connect more info:
    # https://www.odoo.com/es_ES/forum/ayuda-1/question/internal-error-index-10107 # noqa
    cmd = [
        'psql', 'openerp_test', '-c',
        'REINDEX INDEX ir_translation_src_hash_idx',
    ]
    try:
        popen = subprocess.Popen(
            cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        if popen.wait() == 0:
            print("Reindex created: ", cmd)
    except BaseException:
        pass

    if os.environ.get('CACHE'):
        docker_cache()
    return True


if __name__ == '__main__':
    docker_entrypoint()
